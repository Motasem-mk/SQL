create table if not exists employee
( 
  id int ,
  name varchar(50),
  salary double ,
  country varchar(50),
  hiring_date date
);
select* from employee;
delete from employee where id=3;
select * from employee;
set SQL_SAFE_UPDATES=0;
truncate table employee;
select * from employee;
insert into employee values(1,'Motasem',3000,'Palestine','2023-03-10');
select* from employee;
alter table employee add constraint pk primary key(id);
insert into employee values (2,'Mina',1350,'France','2022-10-29');
select* from employee;
update  employee set  name='Amina',salary=1500 where id=2;
select * from employee;
insert into employee (id ,name,salary,hiring_date) values  (3,'Ahmed',2000,'2023-02-01');
select * from employee;
update employee set country ='Palestine' where id =3;
select * from employee;

####-- how to use aut increment --###

create table if not exists auto_increment_ex
(
    id int auto_increment,
    name varchar(50),
    age int ,
    primary key (id)
) ;

insert into auto_increment_ex  values(1,'motasem',39);
insert into auto_increment_ex (name,age) values ('Mina',29);
insert into auto_increment_ex (name,age) values ('Ahmed',24);

select * from auto_increment_ex;

-- Use of limit 
select * from auto_increment_example LIMIT 2;

--# sorting data in mysql by using 'Order By' ex: name 
-- it will be sorted by in ascending by default  
select * from auto_increment_example order by name ; 
-- to sort it in descening 
select* from auto_increment_example order by age desc;
select* from auto_increment_example order by age ;


--# display employee data in desc order of salary and if salaries are same for more than one employees
--# arrange their data in ascedinding order of name

alter table auto_increment_example add column salary double;

update auto_increment_example set salary = 1500 where name= 'Motasem';
update auto_increment_example set salary =1500 where id=2;
update auto_increment_example set salary =2000 where id =3;
update auto_increment_example set salary =2500 where id =4;
select* from auto_increment_example;
update auto_increment_example set salary =2000 where id=5;

select * from auto_increment_example order by salary ;
select * from auto_increment_example order by name asc;

select * from auto_increment_example order by salary desc,name asc;


--### write a query to select the employee who is getting the maximum salary .

select * from auto_increment_example order by salary desc  limit 1;

--##write a query to fins the employee who is getting the minum salary ADD
select * from auto_increment_example  order by salary limit 1;
update   auto_increment_example set salary =4000 where id =1;
select * from auto_increment_example order by salary limit 1;


alter table  auto_increment_example rename employee;
alter table employee add column hiring_date date ;
update employee set hiring_date ='2023-03-10' where name ='Motasem';
select * from employee;
update employee set hiring_date ='2021-11-24' where name ='Mona';
update employee set hiring_date ='2003-12-12' where name ='Mai';
update employee set hiring_date ='2003-12-12' where id=4;
update employee set hiring_date ='2003-12-12' where id=5;
select * from employee;

--### conditional operators = < , > , <= , >= , !=
--### logical operators (and ,or, not)

--# list all employees who are getting salary more than 2000
select* from employee where salary > 2000;

# list all employees who are getting salary more than or equal to 2000

select * from employee where salary >= 2000;

--# list all employees who are getting less than 2000

select* from employee where salary < 2000;

--# list all employees who are getting salary less than or equal to 2000
select * from employee where salary <=2000;


-- # filter the record where age of employees is equal to 39
select * from employee where age = 39;


--# filter the record where age of employees is not equal to 39
--# we can use != or we can use <>
select * from employee where age != 39;
select * from employee where age <> 39 ;

-- find those employees who joined the company on '2003-1212-' and their salary is less than 2100
select * from employee where hiring_date ='2003-12-12' AND salary < 2100;

--# find those employees who joined the company after '2003-12-12' or  their salary is less than 2100

select * from employee where hiring_date > '2003-12-12' and salary >2100;
select* from employee;

--# how to use Between operation in where clause
--# get all employees data who joined the company between hiring_date 2015-02-27 to 2021-11-24

select * from employee where    hiring_date  BETWEEN   '2000-01-01' and '2003-12-12' ; 

--# get all employees data who are getting salary in the range of 1000 to 2100

select * from employee where salary between 1000 and 2100 ;


--# how to use LIKE operation in where clause
--# % -> Zero, one or more than one characters
--# _ -> only one character

--# get all those employees whose name starts with 'S'
select * from employee where name like 'S%';
select* from employee where name like 'MI%';

--## get all the employee whose their  names ends with 'a'
select* from employee where name like '%a';

--## get all those employees whoes names startes with M and ends with m 
select * from employee where name like 'm%a';

--## get all those employees whose name will have exact five characters 

select * from employee where name like '_____';

--## return the employees whoes names at least contains five characters

 select* from employee where name like '%_____%';

 --# How to use IS NULL or IS NOT NULL in the where clause
insert into employee values(6,'Mohammed',NULL,'Paris',2300,'2020-02-02',3000);
insert into employee values(7,'mammy',74,'Gaza',Null,'2020-02-02',3000);

select * from employee where age is null ;
select * from employee ;

select * from employee where old_salary is null;
select * from employee where age is NOT NULL;

select count (*) as age_null from employee where age is null;

create table orders_data
(
 cust_id int,
 order_id int,
 country varchar(50),
 state varchar(50)
);
insert into orders_data values(1,100,'USA','Seattle');
insert into orders_data values(2,101,'INDIA','UP');
insert into orders_data values(2,103,'INDIA','Bihar');
insert into orders_data values(4,108,'USA','WDC');
insert into orders_data values(5,109,'UK','London');
insert into orders_data values(4,110,'USA','WDC');
insert into orders_data values(3,120,'INDIA','AP');
insert into orders_data values(2,121,'INDIA','Goa');
insert into orders_data values(1,131,'USA','Seattle');
insert into orders_data values(6,142,'USA','Seattle');
insert into orders_data values(7,150,'USA','Seattle');

select * from orders_data;

--# calculate total order placed country wise

select country , count(*) as total_order_per_country from  orders_data GROUP BY country ;

--# Write a query to find the total salary by each age group 
 select age ,sum(new_salary) as total_salary_per_age from employee GROUP BY age;

 select age ,sum(new_salary) as total_salary_per_age_group ,
 max(new_salary)max_salary_per_age_group,
 min(new_salary)min_salary_per_age_group,
AVG(new_salary)Average_salary_per_age_group,count(*) as number_of_groups_age
from employee GROUP BY age ;




